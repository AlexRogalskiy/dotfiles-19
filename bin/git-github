#!/usr/bin/env node

// Open the current Github PR for your current branch by running `git pr`
//
// Requires a personal access token to be saved to a file in ~/.gh_token,
// grab an access token here:
// https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/
//
// Also requires an `upstream` or `origin` remote to be configured and pointing
// at a github repo
const https = require('https')
const path = require('path')
const url = require('url')
const {homedir} = require('os')
const {execSync} = require('child_process')
const {readFileSync} = require('fs')

const get = (path, options) => new Promise((resolve, reject) => {
  const opts = {
    protocol: 'https:',
    host: 'api.github.com',
    path,
  ...options}
  const req = https.get(opts, res => {
    let body = ''
    res.on('data', chunk => {
      body += chunk
    })
    res.on('end', () => {
      res.statusCode === 200
        ? resolve(JSON.parse(body))
        : reject(Error(`request failed with status code ${res.statusCode}: ${body}`))
    })
  })
  req.on('error', reject)
})

const open = (url) => {
  process.platform === 'darwin'
    ? execSync(`open "${url}"`)
    : execSync(`xdg-open "${url}"`)
}

const cmd = (script) => execSync(script, {encoding: 'utf8'}).trim()

const main = async () => {

  const upstream = (() => {
    try {
      return cmd('git config --get remote.upstream.url')
    } catch (_) {
      return cmd('git config --get remote.origin.url')
    }
  })()
  const repo = upstream.match(/^git@github.com:([^\s]+).git$/)[1]
  const gh = `https://github.com/${repo}/`
  console.log('ðŸŒŽ ' + gh + '\n')
  open(gh)
}

main()
